# BEGIN KEY
"""key location: ./tayogame_key.py"""
# END KEY

# BEGIN IMPORT KEY
_0x0000,_0x0001,_0x0002,_0x0008,_0x0046,_0x0003,_0x006c = 0,0,0,0,0,0,0
_0x0007,_0x0009,_0x0004,_0x0006,_0x002a,_0x002d         = 0,0,0,0,0,0
try:
    from tayogame_key import _0x0000,_0x0001,_0x0002,_0x0008,_0x0046,_0x0003,_0x006c
    from tayogame_key import _0x0007,_0x0009,_0x0004,_0x0006,_0x002a,_0x002d
except: pass
# END IMPORT KEY
_0x0083 = _0x0007[27]; _0x0087 = _0x0007[28]; _0x008a = _0x0007[29]; _0x0090 = _0x0007[35]
_0x008b = _0x0007[30]; _0x008e = _0x0007[34]; _0x008f = _0x0007[31]; _0x0097 = _0x0007[59]
_0x0091 = _0x0007[36]; _0x007b = _0x0007[25]; _0x0081 = _0x0007[26]; _0x0094 = _0x0007[59]
_0x0070 = _0x0007[10]; _0x0077 = _0x0007[23]; _0x0078 = _0x0007[24]; _0x008d = _0x0007[33] 
_0x0073 = _0x0007[21]; _0x0098 = _0x0007[58]; _0x0092 = _0x0007[44]; _0x0005 = _0x0007[61]
_0x007a = _0x0007[45]; _0x0093 = _0x0007[50]; _0x0074 = _0x0007[22]; _0x001a = _0x0007[63]
_0x007c = _0x0007[46]; _0x007d = _0x0007[47]; _0x007e = _0x0007[48]; _0x007f = _0x0007[49]
_0x009f = _0x0007[51]; _0x0096 = _0x0007[52]; _0x00a0 = _0x0007[53]; _0x0080 = _0x0007[64]
_0x0095 = _0x0007[54]; _0x0099 = _0x0007[55]; _0x009c = _0x0007[56]; _0x009b = _0x0007[57]
_0x0071 = _0x0007[20]; _0x0079 = _0x0007[32]; _0x006d = _0x0007[62]; _0x0082 = _0x0007[65]
_0x0084 = _0x0007[66]; _0x0088 = _0x0007[69]; _0x009d = _0x0007[72]; _0x00a2 = _0x0007[75]
_0x0085 = _0x0007[67]; _0x0089 = _0x0007[70]; _0x00a1 = _0x0007[74]; _0x00a3 = _0x0007[8]
_0x0086 = _0x0007[68]; _0x008c = _0x0007[71]; _0x009e = _0x0007[73]; _0x00a4 = _0x0007[76]
_0x00a5 = _0x0007[77]; _0x00a6 = _0x0007[78]; _0x00a7 = _0x0007[79]; _0x00a8 = _0x0007[80]
_0x00a9 = _0x0007[81]; _0x00aa = _0x0007[82]; _0x00ab = _0x0007[83]; _0x00ac = _0x0007[84]
_0x00ad = _0x0007[85]; _0x00ae = _0x0007[86]; _0x00af = _0x0007[87]; _0x00b0 = _0x0007[88]
_0x00b1 = _0x0007[89]; _0x00b2 = _0x0007[90]; _0x00b3 = _0x0007[91]; _0x00b4 = _0x0007[92]
_0x00b5 = _0x0007[93]; _0x00b6 = _0x0007[94]; _0x00b7 = _0x0007[95]; _0x00b8 = _0x0007[96]
_0x00b9 = _0x0007[97]; _0x00ba = _0x0007[98]; _0x00bb = _0x0007[99]; _0x00bc = _0x0007[100]
_0x00bd = _0x0007[101]; _0x00be = _0x0007[102]; _0x00bf = _0x0007[103]; _0x00c0 = _0x0007[104]
_0x00c1 = _0x0007[105]; _0x00c2 = _0x0007[106]; _0x00c3 = _0x0007[107]; """_0x00c4 = _0x0007[108]
_0x00c5 = _0x0007[109]; _0x00c6 = _0x0007[110]; _0x00c7 = _0x0007[111]; _0x00c8 = _0x0007[112]
_0x00c9 = _0x0007[113]; _0x00ca = _0x0007[114]; _0x00cb = _0x0007[115]; _0x00cc = _0x0007[116]
_0x00cd = _0x0007[117]; _0x00ce = _0x0007[118]; _0x00cf = _0x0007[119]; _0x00d0 = _0x0007[120]
_0x00d1 = _0x0007[121]; _0x00d2 = _0x0007[122]; _0x00d3 = _0x0007[123]; _0x00d4 = _0x0007[124]
_0x00d5 = _0x0007[125]; _0x00d6 = _0x0007[126]; _0x00d7 = _0x0007[127]; _0x00d8 = _0x0007[128]
_0x00d9 = _0x0007[129]; _0x00da = _0x0007[130]; _0x00db = _0x0007[131]; _0x00dc = _0x0007[132]
"""
_0x000a, _0x000b, _0x000c, _0x000d, _0x000e, _0x000f, _0x0010, _0x0011, \
_0x0012, _0x0013, _0x0014, _0x0015, _0x0016, _0x0017, _0x0018, _0x0019 = \
0o0, 0b0, 0x0, 0b0, 0b0, 0b0, 0o0, 0x0, 0x0, 0x0, 0b0, 0b0, 0x0, 0b0, 0b0, 0o0



for _0x006e in [0x0,0o1,0b10]: _0x001a(_0x0007[_0x006e])
class _0x001b():
    def __init__(self,_0x001c,_0x001d,_0x001e,_0x001f):
        self._0x001c = _0x001c
        self._0x001d = _0x001d
class _0x001e():
    def __init__(self,_0x001c,_0x0029,_0x0020,_0x0021,_0x0022,_0x0023,_0x0024):
        self._0x001c = _0x001c
        self._0x001f = _0x001e
        self._0x0025, self._0x0026 = _0x0007[8], 0o144
        self._0x0027 = 0o12
        self._0x0028 = 0b0
        self._0x001f = _0x0007[0b11]
        self._0x0029 = _0x0029
        self._0x0020 = _0x0020
        self._0x0021 = _0x0021
        self._0x0022 = _0x0022
        self._0x0023 = _0x0023
        self._0x0025 = 100 if self._0x0029 == _0x0007[0b100] else self._0x0025
        if self._0x0029 == _0x0007[0o5]:
            self._0x0025 = 200
            self._0x0027 = 20
            self._0x0026 = 200
        if self._0x0029 == _0x0007[0x6]:
            self._0x0025 = 500
            self._0x0027 = 50
            self._0x0026 = 500
        if self._0x0029 == _0x0007[0b111]:
            self._0x0025 = 1000
            self._0x0026 = 1000
            self._0x0027 = 100
class _0x002e():
    def __init__(
            self,_0x001c,_0x002f,_0x0030,_0x000f,_0x0031,_0x0032,_0x0033,_0x0034,\
            _0x0035=None,_0x0036=None,_0x0037=None,_0x0038=None,_0x0039=None,\
            _0x003a=None,_0x006f=True,_0x0072=None
    ):
        self._0x001f = _0x0070
        self._0x003b = False
        self._0x001c = _0x001c
        self._0x0030 = _0x0030
        self._0x0035 = _0x0035
        self._0x0036 = _0x0036
        self._0x002f = _0x002f
        self._0x000f = _0x000f
        self._0x003c = 10
        self._0x003d = 100
        self._0x0027 = 1
        self._0x002f = 1
        self._0x003e = 1
        self._0x0037 = True
        self._0x003f = 0
        self._0x0040 = 0
        self._0x0041 = 2
        self._0x0038 = _0x0038
        self._0x0042 = 100
        self._0x0043 = 100
        self._0x0044 = 100
        self._0x0019 = _0x0019
        self._0x006f = _0x006f if _0x0089(_0x006f) is _0x0085 else True
        self._0x0039 = False if self._0x002f <= 12 else self._0x0039
    def _0x009a(self, _0x0045):
        try:
            if self._0x001f != _0x0070 or _0x0045._0x001f != _0x0070:
                _0x001a(_0x0007[33],_0x0007)
        except _0x0046 as _0x0047:
            _0x001a(_0x008e,_0x0047)
            if self._0x0035 == _0x0045._0x0035 or self._0x0036 == _0x0045._0x0036: _0x0003(0,1)
        if self._0x0030 == _0x0045._0x0030:
            _0x001a(_0x0090)
            _0x001a(_0x0091)
        elif not (_0x0045._0x0039 and self._0x0039 and self._0x006f): _0x001a(_0x0007[39])
        else:
            _0x001a(_0x0007[38])
            if self._0x002f < 12 or \
            _0x0045._0x002f < 12:   _0x001a(_0x0007[40])
            elif not self._0x0037:  _0x001a(_0x0007[41])
            elif _0x0003(0,1) == 0: _0x001a(_0x0007[42])
            else:
                _0x001a(_0x0007[43])
                _0x0048 = _0x0003(0,1)
                global _0x0019,_0x000f
                _0x004a = _0x006d(_0x0092)
                _0x000f += 1
                _0x0019 += 1
                _0x0049 = _0x002e(_0x004a,0,0,_0x000f,0,0,0,0,_0x0045,self,False)
                _0x001a(_0x007d,_0x0093,_0x007f,_0x007e,(_0x007a)if(_0x0048==0)else(_0x007c))
class _0x004b():
    def __init__(self,_0x001c):
        self._0x001c = _0x001c
        self._0x004c = []
        self._0x004d = []
    def _0x004e(self,_0x004f):
        if _0x004f not in self._0x004c:
            if _0x0089(_0x004f) is _0x001e:
                if len(self._0x004d) >= 0x10-0o10-0b111:
                    _0x001a(_0x009f,_0x0096,_0x0095,_0x007f,_0x0099)
                    return False
                else: self._0x004d.append(_0x004f)
            if _0x0089(_0x004f) is _0x004f:
                if len(self._0x004c) >= _0x0007[8]/25:
                    _0x001a(_0x009f,_0x0097,_0x00a0,_0x0095,_0x007f,_0x0099)
                    return False
                else:
                    self._0x004c.append(_0x004f)
                    _0x001a(_0x004f._0x001c,_0x009c,_0x009b,_0x0098,_0x0005,_0x00a1)
class _0x0050():
    def __init__(self):
        self._0x0055 = {}
        self._0x0051 = []
        self._0x0052 = []
    def _0x0053(self,_0x0054):
        if _0x0054 not in self._0x0055:
            self._0x0055[_0x0054] = _0x004b(_0x0054)
            _0x001a(_0x0054,_0x009c,_0x009b,_0x009d)
        else:
            _0x001a(_0x0054,_0x009c,_0x009e,_0x009b,_0x009d)
    def _0x0056(self,_0x0057):
        if _0x0057 not in self._0x0051: self._0x0051.append(_0x0057)
        else: _0x001a(_0x0057,_0x009c,_0x009e,_0x009b,_0x0098,_0x0005,_0x00a1) 
    def _0x0058(self,_0x0059):
        if _0x0059 not in self._0x0052: self._0x0052.append(_0x0059)
class _0x005a():
    def __init__(_0x005b, _0x005c):
        _0x005b._0x0014 = _0x00a2
        _0x005b._0x001c = _0x005c
        _0x005b._0x0026 = _0x00a3*_0x0009+_0x0003(1,_0x0082((_0x00a3/5)*_0x0009))
        _0x005b._0x0025 = _0x005b._0x0026
        _0x005b._0x0028 = _0x0003(1,5)
        _0x005b._0x0027 = (_0x00a3/10)*_0x0009+_0x0003(1,(5*_0x0009))
        if _0x0009 <= 10: _0x005b._0x0028 = 0
    def _0x005d(_0x005e):
        _0x005e._0x0025 = (100*_0x0009+_0x0003(1,(20*_0x0009)))*2
        _0x005e._0x0027 = (10*_0x0009+_0x0003(1,(5*_0x0009)))*2
_0x0076 = ""
_0x0050 = _0x0050()
_0x005f = _0x002e(_0x0007[13],12,0,10,0,0,0,0,1)
_0x0060 = _0x002e(_0x0007[12],12,1,20,0,0,0,0,2)
_0x0061 = _0x002e(_0x0007[14],12,1,3,0,0,0,0,3)
_0x0062 = _0x002e(_0x0007[15],12,0,4,0,0,0,0,4)
_0x0063 = _0x005a(_0x0007[16])
_0x0064 = _0x005a(_0x0007[17])
_0x0065 = _0x005a(_0x0007[18])
_0x0066 = _0x005a(_0x0007[19])
_0x005f = _0x0050._0x0056(_0x005f)
_0x0060 = _0x0050._0x0056(_0x0060)
_0x0061 = _0x0050._0x0056(_0x0061)


_0x0050._0x0056([_0x005f,_0x0060,_0x0061,_0x0062])
_0x0010 = _0x006d(_0x0071)
if _0x0010 == _0x0007[37]:
    _0x001a(_0x0073)
    while True:
        if _0x0003(0,1) == 0:
            _0x009d = _0x0007[_0x0003(0,5)]
        for _0x0075 \
        in [_0x0074,_0x0077,_0x0078,        _0x007b,
            _0x0081,_0x0083,_0x0087,        _0x008a,
            _0x008b,_0x008f,_0x0076]:       _0x001a\
           (_0x0075)
        _0x0010 = _0x006d(_0x0079)
        if _0x0010 == "1":
            _0x001a(_0x0094,_0x0009)
            _0x001a(_0x00a4,_0x00aa,_0x0095,_0x00a6,_0x00ab,\
                    _0x00ac,_0x00ad,_0x0005,_0x00a9,_0x00ae)
            _0x0063 = _0x006d()
            if _0x0063 == _0x0080(_0x0007[9]): continue
        if _0x0010 == "2":
            _0x001a(_0x00af)
            ...
        if _0x0010 == "3":
            _0x001a(_0x00b0)
            _0x0010 = _0x006d(_0x00b1)
            if _0x0010 == "1":
                _0x001a(_0x00b2)
            if _0x0010 == "2":
                _0x001a(_0x00b3)
            if _0x0010 == "3":
                ...
        if _0x0010 == "4":
            _0x001a(_0x00b4)
            _0x0010 = _0x006d(_0x0079)
            if _0x0010 == "1":
                _0x001a(_0x00b5)
                _0x0010 = _0x006d()
                _0x0050._0x0053([_0x0010])
        if _0x0010 == "5":
            _0x001a(_0x00b6)
            _0x0067 = _0x006d(_0x00b7)
            try: _0x0067 = _0x0082(_0x0067)
            except _0x0046 as _0x0068:
                _0x001a(_0x00b8,_0x0068)
            if _0x0067 == 1:
                _0x001a(_0x00b9)
                _0x001a(_0x00ba)
                _0x0010 = _0x006d(_0x00bb)
            if _0x0067 == 2:
                _0x0010 = _0x006d(_0x00bc)
                if _0x0010 == "1":
                    if _0x0013 >= 1e3:
                        _0x0013 -= 1e3
                        _0x0010 = _0x0003(1,100)
                        _0x0011 += 1
                        if _0x0010 <= 80:
                            _0x0010 = _0x0003(0,2)
                            _0x0069 = _0x00c1
                            _0x001a(_0x00bd,_0x0069[_0x0010])
                            _0x006a = [[0,10,0],[10,0,0],[0,0,10]]
                            _0x001e(_0x0069[_0x0010],_0x0007[4],_0x006a[_0x0010][0],_0x006a[_0x0010][1],_0x006a[_0x0010][2],_0x0011)
                        if _0x0010 <= 95 and _0x0010 >= 81:
                            _0x0010 = _0x0003(1,3)
                            if _0x0010 == 1:
                                _0x001a(_0x00bd,"sam")
                                _0x001e("sam",_0x0007[5],25,10,0,_0x0011)
                            if _0x0010 == 2:
                                _0x001a(_0x00bd,"hooman")
                                _0x001e("hooman",_0x0007[5],0,10,25,_0x0011)
                            if _0x0010 == 3:
                                _0x001a(_0x00bd,"chm")
                                _0x001e("chm",_0x0007[5],10,25,0,_0x0011)
                        if _0x0010 <= 99 and _0x0010 >= 96:
                            _0x0010 = _0x0003(0,2)
                            _0x0069 = _0x00be
                            _0x001a(_0x00bd,_0x0069[_0x0010])
                            _0x001e(_0x0069[_0x0010],_0x0007[6],50,50,50,_0x0011)
                        if _0x0010 == 100:
                            _0x0010 = _0x0003(0,1)
                            _0x0069 = _0x00bf
                            _0x001a(_0x00bd,{_0x0069[_0x0010]},"!!!")
                            _0x001e(_0x0069[_0x0010],_0x0007[7],100,100,100,_0x0011)
                    else:
                         _0x001a(_0x00c0,1e3-_0x0013)
                if _0x0010 == 2:
                    if _0x0013 >= 1e4:
                        _0x0013 -= 1e4
                        for i in _0x008c(10):
                            _0x0010 = _0x0003(1,100)
                            _0x0011 += 1
                            if _0x0010 <= 80:
                                _0x0010 = _0x0003(0,2)
                                _0x0069 = _0x00c1
                                _0x001a(_0x00bd,_0x0069[_0x0010])
                                _0x006a = [[0,10,0],[10,0,0],[0,0,10]]
                                _0x001e(_0x0069[_0x0010],_0x0007[4],_0x006a[_0x0010][0],_0x006a[_0x0010][1],_0x006a[_0x0010][2],_0x0011)
                            if _0x0010 <= 95 and _0x0010 >= 81:
                                _0x0010 = _0x0003(0,2)
                                _0x0069 = _0x00c2
                                _0x006a = [[25,10,0],[10,0,0],[0,0,10]]
                                _0x006b = [_0x0007[5],_0x0007[4],_0x0007[4]]
                                _0x001a(_0x00bd,_0x0069[_0x0010])
                                _0x001e(_0x0069[_0x0010],_0x006b[_0x0010],_0x006a[_0x0010][0],_0x006a[_0x0010][1],_0x006a[_0x0010][2],_0x0011)
                            if _0x0010 <= 99 and _0x0010 >= 96:
                                _0x0010 = _0x0003(0,2)
                                _0x0069 = _0x00be
                                _0x001a(_0x00bd,_0x0069[_0x0010])
                                _0x001e(_0x0069[_0x0010],_0x0007[6],50,50,50,_0x0011)
                            if _0x0010 == 100:
                                _0x0010 = _0x0003(0,1)
                                _0x0069 = _0x00bf
                                _0x001a(_0x00bd,_0x0069[_0x0010],"!!!")
                                _0x001e(_0x0069[_0x0010],_0x0007[7],\
                                        (100)if(_0x0010==0)else(1e3),
                                        (100)if(_0x0010==0)else(1e3),
                                        (100)if(_0x0010==0)else(1e3)
                                        ,_0x0011)
                        else:
                            _0x001a(_0x00c0,1e4-_0x0013)
                    if _0x0010 == 3:
                        _0x0010 = _0x006d(_0x006c,_0x00c3)
                        continue
